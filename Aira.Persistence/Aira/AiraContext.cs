// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Aira.Persistence.Aira.Models;

namespace Aira.Persistence.Aira
{
    public partial class AiraContext : DbContext
    {
        public AiraContext(DbContextOptions<AiraContext> options)
            : base(options)
        {
        }

        public virtual DbSet<JobOffer> JobOffer { get; set; }
        public virtual DbSet<JobOfferAdditionalInfo> JobOfferAdditionalInfo { get; set; }
        public virtual DbSet<JobOfferContent> JobOfferContent { get; set; }
        public virtual DbSet<JobOfferContentEducation> JobOfferContentEducation { get; set; }
        public virtual DbSet<JobOfferMain> JobOfferMain { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<JobOffer>(entity =>
            {
                entity.ToTable("job_offer");

                entity.Property(e => e.JobOfferId)
                    .ValueGeneratedNever()
                    .HasColumnName("job_offer_id");

                entity.Property(e => e.CreatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("created_at");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("name");

                entity.Property(e => e.PositionName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("position_name");

                entity.Property(e => e.UserId).HasColumnName("user_id");
            });

            modelBuilder.Entity<JobOfferAdditionalInfo>(entity =>
            {
                entity.HasKey(e => e.JobOfferId);

                entity.ToTable("job_offer_additional_info");

                entity.Property(e => e.JobOfferId)
                    .ValueGeneratedNever()
                    .HasColumnName("job_offer_id");

                entity.Property(e => e.ContactInfo)
                    .HasMaxLength(255)
                    .HasColumnName("contact_info");

                entity.Property(e => e.CvFormat)
                    .HasMaxLength(100)
                    .HasColumnName("cv_format")
                    .IsFixedLength();

                entity.Property(e => e.DataProcessing)
                    .HasMaxLength(255)
                    .HasColumnName("data_processing");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("end_date");

                entity.Property(e => e.MediumType)
                    .HasMaxLength(30)
                    .HasColumnName("medium_type")
                    .IsFixedLength();
            });

            modelBuilder.Entity<JobOfferContent>(entity =>
            {
                entity.HasKey(e => e.JobOfferId);

                entity.ToTable("job_offer_content");

                entity.Property(e => e.JobOfferId)
                    .ValueGeneratedNever()
                    .HasColumnName("job_offer_id");

                entity.Property(e => e.Benefits)
                    .HasMaxLength(1000)
                    .HasColumnName("benefits");

                entity.Property(e => e.OurOffer)
                    .HasMaxLength(1000)
                    .HasColumnName("our_offer");

                entity.Property(e => e.Requirements)
                    .HasMaxLength(1000)
                    .HasColumnName("requirements");

                entity.Property(e => e.Responsibilities)
                    .HasMaxLength(1000)
                    .HasColumnName("responsibilities");
            });

            modelBuilder.Entity<JobOfferContentEducation>(entity =>
            {
                entity.HasKey(e => e.JobOfferId);

                entity.ToTable("job_offer_content_education");

                entity.Property(e => e.JobOfferId)
                    .ValueGeneratedNever()
                    .HasColumnName("job_offer_id");

                entity.Property(e => e.CertificatesName)
                    .HasMaxLength(100)
                    .HasColumnName("certificates_name");

                entity.Property(e => e.CertificatesQualification)
                    .HasMaxLength(100)
                    .HasColumnName("certificates_qualification");

                entity.Property(e => e.CertificatesStage)
                    .HasMaxLength(100)
                    .HasColumnName("certificates_stage");

                entity.Property(e => e.EducationLevel)
                    .HasMaxLength(100)
                    .HasColumnName("education_level");

                entity.Property(e => e.EducationStudiesName)
                    .HasMaxLength(100)
                    .HasColumnName("education_studies_name");

                entity.Property(e => e.EducationStudiesStage)
                    .HasMaxLength(100)
                    .HasColumnName("education_studies_stage");

                entity.Property(e => e.ExperienceField)
                    .HasMaxLength(100)
                    .HasColumnName("experience_field");

                entity.Property(e => e.ExperiencePosition)
                    .HasMaxLength(100)
                    .HasColumnName("experience_position");

                entity.Property(e => e.ExperienceTime)
                    .HasMaxLength(100)
                    .HasColumnName("experience_time");
            });

            modelBuilder.Entity<JobOfferMain>(entity =>
            {
                entity.HasKey(e => e.JobOfferId)
                    .HasName("PK_job_offer_details");

                entity.ToTable("job_offer_main");

                entity.Property(e => e.JobOfferId)
                    .ValueGeneratedNever()
                    .HasColumnName("job_offer_id");

                entity.Property(e => e.CompanyDescription)
                    .HasMaxLength(50)
                    .HasColumnName("company_description");

                entity.Property(e => e.CompanyLogo)
                    .HasColumnType("image")
                    .HasColumnName("company_logo");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(50)
                    .HasColumnName("company_name");

                entity.Property(e => e.ContractType)
                    .HasMaxLength(30)
                    .HasColumnName("contract_type");

                entity.Property(e => e.AddressCity)
                    .HasMaxLength(50)
                    .HasColumnName("address_city");

                entity.Property(e => e.AddressCountry)
                    .HasMaxLength(50)
                    .HasColumnName("address_country");

                entity.Property(e => e.AddressStreet)
                    .HasMaxLength(50)
                    .HasColumnName("address_street");

                entity.Property(e => e.AddressVoivodeship)
                    .HasMaxLength(50)
                    .HasColumnName("address_voivodeship");

                entity.Property(e => e.RecruitmentMode)
                    .HasMaxLength(30)
                    .HasColumnName("recruitment_mode");

                entity.Property(e => e.SalaryFrom)
                    .HasColumnType("decimal(13, 2)")
                    .HasColumnName("salary_from");

                entity.Property(e => e.SalaryTime)
                    .HasMaxLength(30)
                    .HasColumnName("salary_time");

                entity.Property(e => e.SalaryTo)
                    .HasColumnType("decimal(13, 2)")
                    .HasColumnName("salary_to");

                entity.Property(e => e.SalaryType)
                    .HasMaxLength(30)
                    .HasColumnName("salary_type");

                entity.Property(e => e.VacancyNumber).HasColumnName("vacancy_number");

                entity.Property(e => e.WorkModel)
                    .HasMaxLength(30)
                    .HasColumnName("work_model");

                entity.Property(e => e.WorkMode)
                    .HasMaxLength(30)
                    .HasColumnName("work_mode");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}